<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ClinicSystemDataSet" targetNamespace="http://tempuri.org/ClinicSystemDataSet.xsd" xmlns:mstns="http://tempuri.org/ClinicSystemDataSet.xsd" xmlns="http://tempuri.org/ClinicSystemDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ClinicSystemConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ClinicSystemConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WindowsFormsApplication1.Properties.Settings.GlobalReference.Default.ClinicSystemConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Visit_MedicineTableAdapter" GeneratorDataComponentClassName="Visit_MedicineTableAdapter" Name="Visit_Medicine" UserDataComponentName="Visit_MedicineTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicSystemConnectionString (Settings)" DbObjectName="dbo.Visit_Medicine" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Visit_Medicine] WHERE (([VMed_ID] = @Original_VMed_ID) AND ([Visit_ID] = @Original_Visit_ID) AND ([Med_ID] = @Original_Med_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VMed_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VMed_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Visit_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Visit_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Med_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Med_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Visit_Medicine] ([VMed_ID], [Visit_ID]) VALUES (@VMed_ID, @Visit_ID);
SELECT VMed_ID, Visit_ID, Med_ID FROM Visit_Medicine WHERE (VMed_ID = @VMed_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VMed_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VMed_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Visit_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Visit_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT VMed_ID, Visit_ID, Med_ID FROM dbo.Visit_Medicine</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Visit_Medicine] SET [VMed_ID] = @VMed_ID, [Visit_ID] = @Visit_ID WHERE (([VMed_ID] = @Original_VMed_ID) AND ([Visit_ID] = @Original_Visit_ID) AND ([Med_ID] = @Original_Med_ID));
SELECT VMed_ID, Visit_ID, Med_ID FROM Visit_Medicine WHERE (VMed_ID = @VMed_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VMed_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VMed_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Visit_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Visit_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VMed_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VMed_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Visit_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Visit_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Med_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Med_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="VMed_ID" DataSetColumn="VMed_ID" />
              <Mapping SourceColumn="Visit_ID" DataSetColumn="Visit_ID" />
              <Mapping SourceColumn="Med_ID" DataSetColumn="Med_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ClinicSystemDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ClinicSystemDataSet" msprop:Generator_UserDSName="ClinicSystemDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Visit_Medicine" msprop:Generator_TableClassName="Visit_MedicineDataTable" msprop:Generator_TableVarName="tableVisit_Medicine" msprop:Generator_TablePropName="Visit_Medicine" msprop:Generator_RowDeletingName="Visit_MedicineRowDeleting" msprop:Generator_RowChangingName="Visit_MedicineRowChanging" msprop:Generator_RowEvHandlerName="Visit_MedicineRowChangeEventHandler" msprop:Generator_RowDeletedName="Visit_MedicineRowDeleted" msprop:Generator_UserTableName="Visit_Medicine" msprop:Generator_RowChangedName="Visit_MedicineRowChanged" msprop:Generator_RowEvArgName="Visit_MedicineRowChangeEvent" msprop:Generator_RowClassName="Visit_MedicineRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="VMed_ID" msprop:Generator_ColumnVarNameInTable="columnVMed_ID" msprop:Generator_ColumnPropNameInRow="VMed_ID" msprop:Generator_ColumnPropNameInTable="VMed_IDColumn" msprop:Generator_UserColumnName="VMed_ID" type="xs:int" />
              <xs:element name="Visit_ID" msprop:Generator_ColumnVarNameInTable="columnVisit_ID" msprop:Generator_ColumnPropNameInRow="Visit_ID" msprop:Generator_ColumnPropNameInTable="Visit_IDColumn" msprop:Generator_UserColumnName="Visit_ID" type="xs:int" />
              <xs:element name="Med_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnMed_ID" msprop:Generator_ColumnPropNameInRow="Med_ID" msprop:Generator_ColumnPropNameInTable="Med_IDColumn" msprop:Generator_UserColumnName="Med_ID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Visit_Medicine" />
      <xs:field xpath="mstns:VMed_ID" />
    </xs:unique>
  </xs:element>
</xs:schema>